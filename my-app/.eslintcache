[{"C:\\Projects\\Assignment\\Starwars\\my-app\\src\\index.js":"1","C:\\Projects\\Assignment\\Starwars\\my-app\\src\\App.js":"2","C:\\Projects\\Assignment\\Starwars\\my-app\\src\\reportWebVitals.js":"3","C:\\Projects\\Assignment\\Starwars\\my-app\\src\\container\\home.js":"4","C:\\Projects\\Assignment\\Starwars\\my-app\\src\\components\\movies.js":"5","C:\\Projects\\Assignment\\Starwars\\my-app\\src\\components\\characters.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":194,"mtime":1611251948975,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3826,"mtime":1611252080809,"results":"11","hashOfConfig":"8"},{"size":715,"mtime":1611252503953,"results":"12","hashOfConfig":"8"},{"size":493,"mtime":1611251778923,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"yd1u5h",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Projects\\Assignment\\Starwars\\my-app\\src\\index.js",[],["29","30"],"C:\\Projects\\Assignment\\Starwars\\my-app\\src\\App.js",["31"],"import logo from './logo.svg';\nimport './App.css';\nimport Home from './container/home'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Projects\\Assignment\\Starwars\\my-app\\src\\reportWebVitals.js",[],"C:\\Projects\\Assignment\\Starwars\\my-app\\src\\container\\home.js",["32"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\nimport Movies from '../components/movies'\r\nimport Characters from '../components/characters'\r\n\r\nconst Home = props => {\r\n    const [characterApiData, setCharacterApiData] = useState([]);\r\n    const [characters, setCharacters] = useState([]);\r\n    const [selectedCharacter, setSelectedCharacter] = useState('');\r\n    const [films, setFilms] = useState([]);\r\n    const [lastFilm, setLastFilm] = useState({});\r\n    const [dataloaded, setDataloaded] = useState(false);\r\n    const loadCharacterData = async () => {\r\n        await axios.get('https://swapi.dev/api/people')\r\n            .then(respnose => {\r\n                const charactersData = respnose.data.results;\r\n                let index = 1;\r\n                const characterNameList = []\r\n                const characterList = []\r\n                charactersData.forEach(character => {\r\n                    characterNameList.push({ 'value': index, 'display': character.name })\r\n                    characterList.push({ 'id': index, 'name': character.name, 'films': character.films })\r\n                    index++;\r\n                });\r\n                setCharacters([{ 'value': '', 'display': 'Select character' }].concat(characterNameList))\r\n                setCharacterApiData(characterList)\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const loadMovieData = async (characterId) => {\r\n        const characterData = characterApiData.find(t => t.id === parseInt(characterId));\r\n        if (CharacterData && characterData.films) {\r\n            setDataloaded(false);\r\n            const axiosCall = [];\r\n            const filmApiData = [];\r\n            for (let i = 0; i < characterData.films.length; i++) {\r\n                axiosCall.push(axios.get(characterData.films[i]));\r\n            }\r\n            await axios.all(axiosCall)\r\n                .then(axios.spread((...responses) => {\r\n                    responses.forEach(film => {\r\n                        filmApiData.push({ 'date': film.data.release_date, 'title': film.data.title })\r\n                    })\r\n                    if (filmApiData) {\r\n                        setFilms(filmApiData)\r\n\r\n                        setDataloaded(true);\r\n                        filmApiData.sort(sortByDate);\r\n                        setLastFilm(filmApiData[0])\r\n                    }\r\n                }))\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n    }\r\n    const sortByDate = (a, b) => {\r\n        return new Date(b.date).getTime() - new Date(a.date).getTime();\r\n    }\r\n    useEffect(() => {\r\n        loadCharacterData()\r\n    }, [])\r\n    const handleCharacterChange = (event) => {\r\n        if (event.target.value) {\r\n            loadMovieData(event.target.value)\r\n            setSelectedCharacter(event.target.value)\r\n        }\r\n        else {\r\n            setSelectedCharacter('')\r\n            setFilms([])\r\n            setLastFilm({})\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-4\">\r\n                        <a className=\"navbar-brand\" href=\"#\">Star Wars</a>\r\n                    </nav>\r\n        \r\n                <main role=\"main\" className=\"container\">\r\n                    <div className=\"jumbotron\">\r\n                        <h3>Welcome!</h3>\r\n                        <hr/>\r\n                        <Characters changeHandler={handleCharacterChange} characters={characters} />\r\n                        {selectedCharacter ? <Movies films={films} lastFilm={lastFilm} dataloaded={dataloaded} /> : null}\r\n                    </div>\r\n                </main>\r\n\r\n\r\n           \r\n           \r\n            </div>)\r\n   \r\n}\r\nexport default Home","C:\\Projects\\Assignment\\Starwars\\my-app\\src\\components\\movies.js",[],"C:\\Projects\\Assignment\\Starwars\\my-app\\src\\components\\characters.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"42","line":80,"column":25,"nodeType":"43","endLine":80,"endColumn":62},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]